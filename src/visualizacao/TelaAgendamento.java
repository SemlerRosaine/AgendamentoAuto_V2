/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visualizacao;

import controle.ValidaCpf;
import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import modelo.Agendamento;
import modelo.Carro;
import modelo.Cliente;
import modelo.Consultor;
import modelo.dao.AgendamentoDao;
import modelo.dao.CarroDao;
import modelo.dao.ClienteDAO;
import modelo.dao.ConsultorDao;
import visualizacao.carro.TelaSelecaoVeiculo;
import visualizacao.carro.TelaVeiculo;
import visualizacao.componentes.text.formatted.DataTextField;
import visualizacao.componentes.text.formatted.HoraTextField;
import visualizacao.componentes.button.DeleteButton;
import visualizacao.componentes.button.EditButton;
import visualizacao.componentes.button.SaveButton;
import visualizacao.componentes.button.SearchButton;
import visualizacao.componentes.table.NonEditableTableModel;
import visualizacao.componentes.text.txt.TextFieldCpfEnterAction;
import visualizacao.componentes.text.txt.TextFieldEnterAction;

/**
 *
 * @author Jhonnatan
 */
public class TelaAgendamento extends JInternalFrame {

    private Agendamento agendamento;
    private List<Agendamento> agendamentos;
    private List<Consultor> listaConsultores;
    private Cliente cliente;
    private TelaSelecaoVeiculo telaSelecaoVeiculo;

    /**
     * Creates new form NewTelaAgendamento
     */
    public TelaAgendamento() {
        initComponents();

        this.agendamento = new Agendamento();
        this.listaConsultores = new ConsultorDao().buscaConsultoresAtivos();
        DefaultComboBoxModel defaultComboBoxModel = (DefaultComboBoxModel) this.cmbConsultor.getModel();

        for (Consultor consultor : this.listaConsultores) {
            defaultComboBoxModel.addElement(consultor.getNome());
        }
        this.txtCPF.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {
                super.keyPressed(ke);
                if (ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (!(agendamento.getCliente() instanceof Cliente) || (agendamento.getCliente() instanceof Cliente && JOptionPane.showConfirmDialog(null, "Deseja localizar outro cliente?") == JOptionPane.YES_OPTION)) {
                        btnBuscaCliente.setEnabled(false);
                        buscarCliente();
                    }
                }
            }
        });

        this.txtPlacaVeiculo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {
                super.keyPressed(ke);
                if (ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    btnBuscarVeiculo.setEnabled(false);
                    buscarVeiculo();
                }
            }
        });
        this.txtCPF.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTAgendamento = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        lblCPF = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        lblDataAgendada = new javax.swing.JLabel();
        lblHoraAgendada = new javax.swing.JLabel();
        lblHoraRacepcao = new javax.swing.JLabel();
        lblNumeroPrisma = new javax.swing.JLabel();
        txtCPF = new visualizacao.componentes.text.formatted.CPFTextField();
        lblNomeCliente = new javax.swing.JLabel();
        txtHoraAgendada = new HoraTextField(true);
        txtHoraRecepcao = new visualizacao.componentes.text.formatted.HoraTextField();
        txtNumeroPrisma = new javax.swing.JTextField();
        btnBuscaCliente = new SearchButton();
        lblConsultor = new javax.swing.JLabel();
        lblHoraPrometida = new javax.swing.JLabel();
        txtHoraEntregaPrevista = new visualizacao.componentes.text.formatted.HoraTextField();
        lblNumeroOS = new javax.swing.JLabel();
        txtNumeroOS = new javax.swing.JTextField();
        pnlChecklist = new javax.swing.JPanel();
        cbxExplicacao = new javax.swing.JCheckBox();
        cbxVeiculoPronto = new javax.swing.JCheckBox();
        cbxEfetivo = new javax.swing.JCheckBox();
        cbxAgendado = new javax.swing.JCheckBox();
        cbxOrcamento = new javax.swing.JCheckBox();
        cbxRequisicao = new javax.swing.JCheckBox();
        cbxInspecao = new javax.swing.JCheckBox();
        cbxRetorno = new javax.swing.JCheckBox();
        btnSalvarAgendamento = new SaveButton();
        lblPlacaVeiculo = new javax.swing.JLabel();
        txtPlacaVeiculo = new visualizacao.componentes.text.formatted.PlacaVeiculoTextField();
        btnBuscarVeiculo = new javax.swing.JButton();
        btnCadastrarVeiculo = new javax.swing.JButton();
        pnlVeiculo = new javax.swing.JPanel();
        lblModelo = new javax.swing.JLabel();
        lblPlaca = new javax.swing.JLabel();
        lblDadoPlacaVeiculo = new javax.swing.JLabel();
        lblDadoModeloVeiculo = new javax.swing.JLabel();
        txtDataAgendada = new DataTextField(true);
        lblDataEntrega = new javax.swing.JLabel();
        txtDataEntregaPrevista = new visualizacao.componentes.text.formatted.DataTextField();
        jLabel1 = new javax.swing.JLabel();
        txtDataRecepcao = new visualizacao.componentes.text.formatted.DataTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDataEntrega = new visualizacao.componentes.text.formatted.DataTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHoraEntrega = new visualizacao.componentes.text.formatted.HoraTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMotivoVisita = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        cmbConsultor = new javax.swing.JComboBox();
        pnlPesquisa = new javax.swing.JPanel();
        pnlFiltroPesquisa = new javax.swing.JPanel();
        rbNome = new javax.swing.JRadioButton();
        rbCPF = new javax.swing.JRadioButton();
        txtPesquisaNome = new TextFieldEnterAction(){
            @Override
            public void onEnterKeyPress(KeyEvent evt){
                buscaAgendamentos();
            }
        };
        txtPesquisaCPF = new TextFieldCpfEnterAction(){
            @Override
            public void onEnterKeyPress(KeyEvent evt){
                buscaAgendamentos();
            }
        };
        btnBuscarAgendamento = new SearchButton();
        spnlAgendamentos = new javax.swing.JScrollPane();
        tblAgendamentos = new javax.swing.JTable();
        pnlBotoesPesquisa = new javax.swing.JPanel();
        btnExcluirAgendamento = new DeleteButton();
        btnAlterarAgendamento = new EditButton();

        setClosable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/visualizacao/imagens/agendamento.png"))); // NOI18N

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTAgendamento.setFocusable(false);
        jTAgendamento.setRequestFocusEnabled(false);

        lblCPF.setText("CPF");

        lblCliente.setText("Cliente");

        lblDataAgendada.setText("Data agendada");

        lblHoraAgendada.setText("Hora agendada");

        lblHoraRacepcao.setText("Hora de recepção");

        lblNumeroPrisma.setText("Número do prisma");

        txtHoraAgendada.setEnabled(false);

        txtHoraRecepcao.setEnabled(false);

        txtNumeroPrisma.setEnabled(false);

        btnBuscaCliente.setText("Buscar");
        btnBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaClienteActionPerformed(evt);
            }
        });
        btnBuscaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscaClienteKeyPressed(evt);
            }
        });

        lblConsultor.setText("Consultor");

        lblHoraPrometida.setText("Hora de entrega prevista");

        txtHoraEntregaPrevista.setEnabled(false);

        lblNumeroOS.setText("Número da O.S.");

        txtNumeroOS.setEnabled(false);

        pnlChecklist.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbxExplicacao.setText("Explicação do trabalho");
        cbxExplicacao.setEnabled(false);

        cbxVeiculoPronto.setText("Veículo pronto e O.S. revisada no prazo");
        cbxVeiculoPronto.setEnabled(false);

        cbxEfetivo.setText("Efetivo");
        cbxEfetivo.setEnabled(false);

        cbxAgendado.setText("Cliente havia agendado");
        cbxAgendado.setEnabled(false);

        cbxOrcamento.setText("Solicitou orçamento");
        cbxOrcamento.setEnabled(false);

        cbxRequisicao.setText("Requisição de peças");
        cbxRequisicao.setEnabled(false);

        cbxInspecao.setText("Houve inspeção no elevador");
        cbxInspecao.setEnabled(false);

        cbxRetorno.setText("Retorno");
        cbxRetorno.setEnabled(false);

        javax.swing.GroupLayout pnlChecklistLayout = new javax.swing.GroupLayout(pnlChecklist);
        pnlChecklist.setLayout(pnlChecklistLayout);
        pnlChecklistLayout.setHorizontalGroup(
            pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChecklistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxEfetivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxAgendado, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxExplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxInspecao, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxOrcamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxRetorno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxRequisicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxVeiculoPronto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlChecklistLayout.setVerticalGroup(
            pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChecklistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChecklistLayout.createSequentialGroup()
                        .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxRetorno)
                            .addComponent(cbxRequisicao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxOrcamento)
                            .addComponent(cbxVeiculoPronto)))
                    .addGroup(pnlChecklistLayout.createSequentialGroup()
                        .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxAgendado)
                            .addComponent(cbxExplicacao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlChecklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxEfetivo)
                            .addComponent(cbxInspecao))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvarAgendamento.setText("Salvar");
        btnSalvarAgendamento.setEnabled(false);
        btnSalvarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAgendamentoActionPerformed(evt);
            }
        });

        lblPlacaVeiculo.setText("Placa do veículo");

        txtPlacaVeiculo.setEnabled(false);

        btnBuscarVeiculo.setText("Buscar");
        btnBuscarVeiculo.setEnabled(false);
        btnBuscarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVeiculoActionPerformed(evt);
            }
        });

        btnCadastrarVeiculo.setText("Cadastrar novo veículo");
        btnCadastrarVeiculo.setEnabled(false);
        btnCadastrarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarVeiculoActionPerformed(evt);
            }
        });

        pnlVeiculo.setBorder(javax.swing.BorderFactory.createTitledBorder("Veículo"));
        pnlVeiculo.setEnabled(false);

        lblModelo.setText("Modelo");
        lblModelo.setEnabled(false);

        lblPlaca.setText("Placa");
        lblPlaca.setEnabled(false);

        lblDadoPlacaVeiculo.setEnabled(false);

        lblDadoModeloVeiculo.setEnabled(false);

        javax.swing.GroupLayout pnlVeiculoLayout = new javax.swing.GroupLayout(pnlVeiculo);
        pnlVeiculo.setLayout(pnlVeiculoLayout);
        pnlVeiculoLayout.setHorizontalGroup(
            pnlVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVeiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblModelo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDadoModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPlaca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDadoPlacaVeiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlVeiculoLayout.setVerticalGroup(
            pnlVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVeiculoLayout.createSequentialGroup()
                .addGroup(pnlVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblModelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDadoModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDadoPlacaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtDataAgendada.setEnabled(false);

        lblDataEntrega.setText("Data de entrega prevista");

        txtDataEntregaPrevista.setEnabled(false);

        jLabel1.setText("Data de recepção");

        txtDataRecepcao.setEnabled(false);

        jLabel2.setText("Data da entrega");

        txtDataEntrega.setEnabled(false);

        jLabel3.setText("Hora da entrega");

        txtHoraEntrega.setEnabled(false);

        jLabel4.setText("Telefone");

        txtTelefone.setEnabled(false);

        jLabel5.setText("Motivo da visita");

        txtMotivoVisita.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvarAgendamento))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblConsultor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNumeroPrisma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDataAgendada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDataEntrega, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDataAgendada)
                                        .addComponent(txtDataEntregaPrevista)
                                        .addComponent(txtDataRecepcao, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblHoraAgendada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblHoraRacepcao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblHoraPrometida, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtHoraAgendada)
                                                .addComponent(txtHoraRecepcao, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(txtHoraEntregaPrevista, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(txtDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(txtNumeroPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lblNumeroOS, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtHoraEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNumeroOS, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(txtMotivoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbConsultor, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addComponent(pnlChecklist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlVeiculo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblCPF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPlacaVeiculo, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(lblCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtTelefone, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(txtPlacaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnBuscarVeiculo)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnCadastrarVeiculo))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscaCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlacaVeiculo)
                    .addComponent(txtPlacaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarVeiculo)
                    .addComponent(btnCadastrarVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConsultor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbConsultor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMotivoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataAgendada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataAgendada)
                    .addComponent(lblHoraAgendada)
                    .addComponent(txtHoraAgendada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDataRecepcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDataEntrega)
                            .addComponent(txtDataEntregaPrevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHoraRacepcao)
                            .addComponent(txtHoraRecepcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHoraPrometida)
                            .addComponent(txtHoraEntregaPrevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtHoraEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroPrisma)
                    .addComponent(txtNumeroPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumeroOS)
                    .addComponent(txtNumeroOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChecklist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvarAgendamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTAgendamento.addTab("Agendamento", jPanel2);

        pnlPesquisa.setLayout(new java.awt.BorderLayout());

        pnlFiltroPesquisa.setPreferredSize(new java.awt.Dimension(708, 67));

        buttonGroup5.add(rbNome);
        rbNome.setText("Nome");
        rbNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNomeActionPerformed(evt);
            }
        });

        buttonGroup5.add(rbCPF);
        rbCPF.setText("CPF");
        rbCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCPFActionPerformed(evt);
            }
        });

        txtPesquisaNome.setEnabled(false);

        txtPesquisaCPF.setEnabled(false);

        btnBuscarAgendamento.setText("Buscar");
        btnBuscarAgendamento.setEnabled(false);
        btnBuscarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarAgendamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFiltroPesquisaLayout = new javax.swing.GroupLayout(pnlFiltroPesquisa);
        pnlFiltroPesquisa.setLayout(pnlFiltroPesquisaLayout);
        pnlFiltroPesquisaLayout.setHorizontalGroup(
            pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltroPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rbNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbCPF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFiltroPesquisaLayout.createSequentialGroup()
                        .addComponent(txtPesquisaCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 409, Short.MAX_VALUE))
                    .addComponent(txtPesquisaNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlFiltroPesquisaLayout.setVerticalGroup(
            pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltroPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscarAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addGroup(pnlFiltroPesquisaLayout.createSequentialGroup()
                        .addGroup(pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbNome)
                            .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFiltroPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbCPF)
                            .addComponent(txtPesquisaCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPesquisa.add(pnlFiltroPesquisa, java.awt.BorderLayout.PAGE_START);

        tblAgendamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        spnlAgendamentos.setViewportView(tblAgendamentos);

        pnlPesquisa.add(spnlAgendamentos, java.awt.BorderLayout.CENTER);

        btnExcluirAgendamento.setText("Excluir");
        btnExcluirAgendamento.setEnabled(false);
        btnExcluirAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirAgendamentoActionPerformed(evt);
            }
        });

        btnAlterarAgendamento.setText("Alterar");
        btnAlterarAgendamento.setEnabled(false);
        btnAlterarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarAgendamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesPesquisaLayout = new javax.swing.GroupLayout(pnlBotoesPesquisa);
        pnlBotoesPesquisa.setLayout(pnlBotoesPesquisaLayout);
        pnlBotoesPesquisaLayout.setHorizontalGroup(
            pnlBotoesPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotoesPesquisaLayout.createSequentialGroup()
                .addContainerGap(662, Short.MAX_VALUE)
                .addComponent(btnAlterarAgendamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirAgendamento)
                .addContainerGap())
        );
        pnlBotoesPesquisaLayout.setVerticalGroup(
            pnlBotoesPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotoesPesquisaLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(pnlBotoesPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirAgendamento)
                    .addComponent(btnAlterarAgendamento))
                .addContainerGap())
        );

        pnlPesquisa.add(pnlBotoesPesquisa, java.awt.BorderLayout.PAGE_END);

        jTAgendamento.addTab("Pesquisar", pnlPesquisa);

        jPanel1.add(jTAgendamento, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaClienteActionPerformed
        if (!(agendamento.getCliente() instanceof Cliente) || (agendamento.getCliente() instanceof Cliente && JOptionPane.showConfirmDialog(null, "Deseja localizar outro cliente?") == JOptionPane.YES_OPTION)) {
            buscarCliente();
        }
    }//GEN-LAST:event_btnBuscaClienteActionPerformed

    private void btnSalvarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAgendamentoActionPerformed
        if (validaFormulario()) {
            populaObjeto();
            this.agendamento = new AgendamentoDao().salvar(this.agendamento);
            this.habilitaCabecalho(false);
            JOptionPane.showMessageDialog(this, "Agendamento salvo com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Há campos obrigatórios não preenchidos, por favor, verifique.", "Atenção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarAgendamentoActionPerformed

    private void btnBuscarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarAgendamentoActionPerformed
        buscaAgendamentos();
    }//GEN-LAST:event_btnBuscarAgendamentoActionPerformed

    private void btnAlterarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarAgendamentoActionPerformed
        this.agendamento = this.agendamentos.get(this.tblAgendamentos.getSelectedRow());
        this.jTAgendamento.setSelectedIndex(0);

        this.habilita(true);
        this.habilitarCamposVeiculo(true);
        this.habilitaCabecalho(false);
        this.popularCampos();

    }//GEN-LAST:event_btnAlterarAgendamentoActionPerformed

    private void btnExcluirAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirAgendamentoActionPerformed
        this.agendamento = this.agendamentos.get(this.tblAgendamentos.getSelectedRow());
        if (JOptionPane.showConfirmDialog(this, "Confirma a exclusão do Agendamento?") == JOptionPane.YES_OPTION) {
            new AgendamentoDao().excluirBanco(this.agendamento);
            this.buscaAgendamentos();
        }
        this.novoAgendamento();
    }//GEN-LAST:event_btnExcluirAgendamentoActionPerformed

    private void btnBuscarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVeiculoActionPerformed
        buscarVeiculo();
    }//GEN-LAST:event_btnBuscarVeiculoActionPerformed

    private void btnCadastrarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarVeiculoActionPerformed
        final TelaVeiculo telaCadastroVeiculo = new TelaVeiculo(this.agendamento.getCliente());
        telaCadastroVeiculo.setVisible(true);
        Inicializacao.AREA_DE_TRABALHO.add(telaCadastroVeiculo);
        telaCadastroVeiculo.toFront();
        try {
            telaCadastroVeiculo.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(TelaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        telaCadastroVeiculo.addInternalFrameListener(new InternalFrameAdapter() {
            @Override
            public void internalFrameClosing(InternalFrameEvent ife) {
                super.internalFrameClosing(ife);
                veiculoSelecionado(telaCadastroVeiculo.getVeiculo());
            }
        });
    }//GEN-LAST:event_btnCadastrarVeiculoActionPerformed

    private void btnBuscaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscaClienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            buscarCliente();
        }
    }//GEN-LAST:event_btnBuscaClienteKeyPressed

    private void rbNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNomeActionPerformed
        this.txtPesquisaNome.setEnabled(this.rbNome.getModel().isSelected());
        this.btnBuscarAgendamento.setEnabled(this.rbNome.getModel().isSelected());
        this.txtPesquisaCPF.setEnabled(!this.rbNome.getModel().isSelected());
    }//GEN-LAST:event_rbNomeActionPerformed

    private void rbCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCPFActionPerformed
        this.txtPesquisaNome.setEnabled(!this.rbCPF.getModel().isSelected());
        this.btnBuscarAgendamento.setEnabled(this.rbCPF.getModel().isSelected());
        this.txtPesquisaCPF.setEnabled(this.rbCPF.getModel().isSelected());
    }//GEN-LAST:event_rbCPFActionPerformed

    private void newButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButton1ActionPerformed
        novoAgendamento();
    }//GEN-LAST:event_newButton1ActionPerformed

    private void habilitarCamposVeiculo(Boolean valor) {
        this.pnlVeiculo.setEnabled(valor);
        this.lblModelo.setEnabled(valor);
        this.lblPlaca.setEnabled(valor);
        this.lblDadoModeloVeiculo.setEnabled(valor);
        this.lblDadoPlacaVeiculo.setEnabled(valor);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarAgendamento;
    private javax.swing.JButton btnBuscaCliente;
    private javax.swing.JButton btnBuscarAgendamento;
    private javax.swing.JButton btnBuscarVeiculo;
    private javax.swing.JButton btnCadastrarVeiculo;
    private javax.swing.JButton btnExcluirAgendamento;
    private javax.swing.JButton btnSalvarAgendamento;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JCheckBox cbxAgendado;
    private javax.swing.JCheckBox cbxEfetivo;
    private javax.swing.JCheckBox cbxExplicacao;
    private javax.swing.JCheckBox cbxInspecao;
    private javax.swing.JCheckBox cbxOrcamento;
    private javax.swing.JCheckBox cbxRequisicao;
    private javax.swing.JCheckBox cbxRetorno;
    private javax.swing.JCheckBox cbxVeiculoPronto;
    private javax.swing.JComboBox cmbConsultor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTAgendamento;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblConsultor;
    private javax.swing.JLabel lblDadoModeloVeiculo;
    private javax.swing.JLabel lblDadoPlacaVeiculo;
    private javax.swing.JLabel lblDataAgendada;
    private javax.swing.JLabel lblDataEntrega;
    private javax.swing.JLabel lblHoraAgendada;
    private javax.swing.JLabel lblHoraPrometida;
    private javax.swing.JLabel lblHoraRacepcao;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNumeroOS;
    private javax.swing.JLabel lblNumeroPrisma;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblPlacaVeiculo;
    private javax.swing.JPanel pnlBotoesPesquisa;
    private javax.swing.JPanel pnlChecklist;
    private javax.swing.JPanel pnlFiltroPesquisa;
    private javax.swing.JPanel pnlPesquisa;
    private javax.swing.JPanel pnlVeiculo;
    private javax.swing.JRadioButton rbCPF;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JScrollPane spnlAgendamentos;
    private javax.swing.JTable tblAgendamentos;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JFormattedTextField txtDataAgendada;
    private javax.swing.JFormattedTextField txtDataEntrega;
    private javax.swing.JFormattedTextField txtDataEntregaPrevista;
    private javax.swing.JFormattedTextField txtDataRecepcao;
    private javax.swing.JTextField txtHoraAgendada;
    private javax.swing.JFormattedTextField txtHoraEntrega;
    private javax.swing.JTextField txtHoraEntregaPrevista;
    private javax.swing.JTextField txtHoraRecepcao;
    private javax.swing.JTextField txtMotivoVisita;
    private javax.swing.JTextField txtNumeroOS;
    private javax.swing.JTextField txtNumeroPrisma;
    private javax.swing.JTextField txtPesquisaCPF;
    private javax.swing.JTextField txtPesquisaNome;
    private javax.swing.JTextField txtPlacaVeiculo;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void buscaAgendamento() {

        NonEditableTableModel defaultTableModel = new NonEditableTableModel();
        defaultTableModel.setColumnIdentifiers(new String[]{"Nome", "CPF", "Data", "Horario Agendado", "Telefone", "Consultor"});

        for (Agendamento agenda : agendamentos) {
            defaultTableModel.addRow(new String[]{agenda.getCliente().getNome(),
                agenda.getCliente().getCpf(),
                new SimpleDateFormat("dd/MM/yyyy").format(agenda.getDataAgendamento()),
                new SimpleDateFormat("HH:mm").format(agenda.getDataAgendamento()),
                agenda.getCliente().getTelefone(),
                agenda.getConsultor().getNome()});
        }

        this.tblAgendamentos.setModel(defaultTableModel);
        this.tblAgendamentos.getColumnModel().getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                btnAlterarAgendamento.setEnabled(!tblAgendamentos.getColumnModel().getSelectionModel().isSelectionEmpty());
                btnExcluirAgendamento.setEnabled(!tblAgendamentos.getColumnModel().getSelectionModel().isSelectionEmpty());
            }
        });

    }

    private void veiculoSelecionado(Carro veiculo) {
        this.agendamento.setVeiculo(veiculo);

        if (this.agendamento.getVeiculo() instanceof Carro) {
            habilitarCamposVeiculo(true);

            lblDadoModeloVeiculo.setText(agendamento.getVeiculo().getModelo());
            lblDadoPlacaVeiculo.setText(agendamento.getVeiculo().getPlaca());
            txtPlacaVeiculo.setText(agendamento.getVeiculo().getPlaca());

            habilita(true);

            this.txtDataAgendada.setText(new SimpleDateFormat("dd/MM/yyyy").format((this.agendamento.getDataAgendamento() == null) ? new Date() : this.agendamento.getDataAgendamento()));

            this.txtDataRecepcao.setText(new SimpleDateFormat("dd/MM/yyyy").format((this.agendamento.getDataRecepcao() == null) ? new Date() : this.agendamento.getDataRecepcao()));
            this.txtHoraRecepcao.setText(new SimpleDateFormat("HH:mm").format((this.agendamento.getDataRecepcao() == null) ? new Date() : this.agendamento.getDataRecepcao()));
            
            this.txtMotivoVisita.requestFocus();
        }
    }

    private void buscarCliente() throws HeadlessException {
        this.btnBuscaCliente.setText("Buscando...");
        this.btnBuscaCliente.setEnabled(false);
        String cpf = this.txtCPF.getText().replaceAll("\\.", "").replaceAll("-", "").replaceAll(" ", "");
        if ((cpf.length() > 0)) {
            if (ValidaCpf.isCPF(cpf)) {
                this.cliente = new ClienteDAO().buscaPessoa(this.txtCPF.getText());
                if (this.cliente instanceof Cliente) {
                    lblNomeCliente.setText(this.cliente.getNome());
                    txtTelefone.setEnabled(true);
                    txtTelefone.setText(this.cliente.getTelefone());
                    txtPlacaVeiculo.setEnabled(true);
                    btnBuscarVeiculo.setEnabled(true);
                    btnCadastrarVeiculo.setEnabled(true);

                    this.agendamento = new Agendamento();
                    this.agendamento.setCliente(this.cliente);
                    this.txtPlacaVeiculo.requestFocus();
                } else {
                    Object[] options = {"Sim", "Não"};
                    Integer optionSelected = JOptionPane.showInternalOptionDialog(this, "Não foi possível localizar cliente cadastrado para o CPF informado, deseja cadastrar?", "Cadastrar cliente?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                    if (optionSelected == JOptionPane.YES_OPTION) {
                        this.cliente = new Cliente();
                        this.cliente.setCpf(this.txtCPF.getText());
                        TelaCliente telaCadastroCliente = new TelaCliente(this.cliente);
                        telaCadastroCliente.setVisible(true);
                        Inicializacao.AREA_DE_TRABALHO.add(telaCadastroCliente);
                        telaCadastroCliente.toFront();
                        try {
                            telaCadastroCliente.setSelected(true);
                        } catch (PropertyVetoException ex) {
                            Logger.getLogger(TelaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        telaCadastroCliente.addInternalFrameListener(new InternalFrameAdapter() {
                            @Override
                            public void internalFrameClosed(InternalFrameEvent ife) {
                                btnBuscaClienteActionPerformed(null);
                            }
                        });
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "O CPF informado é inválido.");
            }

        } else {
            JOptionPane.showMessageDialog(this, "É necessário informar o CPF do cliente.");
        }
        this.btnBuscaCliente.setEnabled(true);
        this.btnBuscaCliente.setText("Buscar");

    }

    private void buscarVeiculo() throws HeadlessException {
        String placa = txtPlacaVeiculo.getText().trim();
        if ("".equals(placa)) {
            telaSelecaoVeiculo = new TelaSelecaoVeiculo(cliente);
            telaSelecaoVeiculo.setVisible(true);
            Inicializacao.AREA_DE_TRABALHO.add(telaSelecaoVeiculo);
            telaSelecaoVeiculo.toFront();
            try {
                telaSelecaoVeiculo.setSelected(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(TelaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
            }

            telaSelecaoVeiculo.addInternalFrameListener(new InternalFrameAdapter() {
                @Override
                public void internalFrameClosing(InternalFrameEvent e) {
                    if (telaSelecaoVeiculo.getVeiculoSelecionado() instanceof Carro) {
                        veiculoSelecionado(telaSelecaoVeiculo.getVeiculoSelecionado());
                    }
                }
            });

        } else {
            List<Carro> veiculos = new CarroDao().buscarCarro(this.txtPlacaVeiculo.getText().trim().toUpperCase(), this.agendamento.getCliente());
            if (veiculos instanceof List && veiculos.size() == 1) {
                veiculoSelecionado(veiculos.get(0));
            } else if (veiculos instanceof List && veiculos.size() > 1) {
                telaSelecaoVeiculo = new TelaSelecaoVeiculo(this.txtPlacaVeiculo.getText().trim().toUpperCase(), cliente);
                telaSelecaoVeiculo.setVisible(true);
                Inicializacao.AREA_DE_TRABALHO.add(telaSelecaoVeiculo);
                telaSelecaoVeiculo.toFront();
                try {
                    telaSelecaoVeiculo.setSelected(true);
                } catch (PropertyVetoException ex) {
                    Logger.getLogger(TelaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
                }

                telaSelecaoVeiculo.addInternalFrameListener(new InternalFrameAdapter() {
                    @Override
                    public void internalFrameClosing(InternalFrameEvent e) {
                        if (telaSelecaoVeiculo.getVeiculoSelecionado() instanceof Carro) {
                            veiculoSelecionado(telaSelecaoVeiculo.getVeiculoSelecionado());
                        }
                    }
                });
            } else {
                JOptionPane.showMessageDialog(this, "Não foi possível localizar nenhum veículo do cliente com a placa informada.");
            }
        }
        this.btnBuscarVeiculo.setText("Buscar");
        this.btnBuscarVeiculo.setEnabled(true);
    }

    private void buscaAgendamentos() {
        if (rbNome.isSelected()) {
            agendamentos = new AgendamentoDao().buscaAgendaPorNome(this.txtPesquisaNome.getText());
            buscaAgendamento();
        } else {
            if ((this.txtPesquisaCPF.getText().trim().length() > 0) && (ValidaCpf.isCPF(this.txtPesquisaCPF.getText()))) {
                agendamentos = new AgendamentoDao().buscaAgendaPorCPF(this.txtPesquisaCPF.getText());
                buscaAgendamento();
            }
        }
    }

    /**
     * Método responsável pela indicação de valores dos campos do formulário.
     */
    private void popularCampos() {
        this.txtCPF.setText((this.agendamento.getCliente() instanceof Cliente) ? this.agendamento.getCliente().getCpf() : null);
        this.lblNomeCliente.setText((this.agendamento.getCliente() instanceof Cliente) ? this.agendamento.getCliente().getNome() : null);
        this.txtTelefone.setText((this.agendamento.getCliente() instanceof Cliente) ? this.agendamento.getCliente().getTelefone() : null);
        this.txtPlacaVeiculo.setText((this.agendamento.getVeiculo() instanceof Carro) ? this.agendamento.getVeiculo().getPlaca() : null);
        this.lblDadoModeloVeiculo.setText((this.agendamento.getVeiculo() instanceof Carro) ? this.agendamento.getVeiculo().getModelo() : null);
        this.lblDadoPlacaVeiculo.setText((this.agendamento.getVeiculo() instanceof Carro) ? this.agendamento.getVeiculo().getPlaca() : null);
        this.txtMotivoVisita.setText(this.agendamento.getMotivoVisita());
        this.txtDataAgendada.setText((this.agendamento.getDataAgendamento() instanceof Date) ? new SimpleDateFormat("dd/MM/yyyy").format(this.agendamento.getDataAgendamento()) : null);
        this.txtHoraAgendada.setText((this.agendamento.getDataAgendamento() instanceof Date) ? new SimpleDateFormat("HH:mm").format(this.agendamento.getDataAgendamento()) : null);
        this.txtDataRecepcao.setText((this.agendamento.getDataRecepcao() instanceof Date) ? new SimpleDateFormat("dd/MM/yyyy").format(this.agendamento.getDataRecepcao()) : null);
        this.txtHoraRecepcao.setText((this.agendamento.getDataRecepcao() instanceof Date) ? new SimpleDateFormat("HH:mm").format(this.agendamento.getDataRecepcao()) : null);
        this.txtDataEntregaPrevista.setText((this.agendamento.getDataEntregaPrevista() instanceof Date) ? new SimpleDateFormat("dd/MM/yyyy").format(this.agendamento.getDataEntregaPrevista()) : null);
        this.txtHoraEntregaPrevista.setText((this.agendamento.getDataEntregaPrevista() instanceof Date) ? new SimpleDateFormat("HH:mm").format(this.agendamento.getDataEntregaPrevista()) : null);
        this.txtDataEntrega.setText((this.agendamento.getDataEntrega() instanceof Date) ? new SimpleDateFormat("dd/MM/yyyy").format(this.agendamento.getDataEntrega()) : null);
        this.txtHoraEntrega.setText((this.agendamento.getDataEntrega() instanceof Date) ? new SimpleDateFormat("HH:mm").format(this.agendamento.getDataEntrega()) : null);
        this.txtNumeroPrisma.setText(this.agendamento.getCodigoPrisma());
        this.txtNumeroOS.setText((this.agendamento.getNumeroOS() == null) ? null : this.agendamento.getNumeroOS().toString());
        this.cbxAgendado.setSelected(this.agendamento.getAgendado());
        this.cbxEfetivo.setSelected(this.agendamento.getEfetivo());
        this.cbxRetorno.setSelected(this.agendamento.getRetorno());
        this.cbxOrcamento.setSelected(this.agendamento.getOrcamento());
        this.cbxExplicacao.setSelected(this.agendamento.getExplicacaoTrabalho());
        this.cbxInspecao.setSelected(this.agendamento.getElevador());
        this.cbxRequisicao.setSelected(this.agendamento.getRequisicaoPecas());
        this.cbxVeiculoPronto.setSelected(this.agendamento.getVeiculoProntoRevisado());
    }

    private void populaObjeto() {
        this.agendamento.getCliente().setTelefone(this.txtTelefone.getText().trim());
        this.agendamento.setMotivoVisita(this.txtMotivoVisita.getText().trim());
        try {
            this.agendamento.setDataAgendamento(new SimpleDateFormat("dd/MM/yyyy HH:mm").parse(this.txtDataAgendada.getText().trim() + " " + this.txtHoraAgendada.getText().trim()));
        } catch (ParseException ex) {
            this.agendamento.setDataAgendamento(null);
        }
        try {
            this.agendamento.setDataRecepcao(new SimpleDateFormat("dd/MM/yyyy HH:mm").parse(this.txtDataRecepcao.getText().trim() + " " + this.txtHoraRecepcao.getText().trim()));
        } catch (ParseException ex) {
            this.agendamento.setDataRecepcao(null);
        }
        try {
            this.agendamento.setDataEntregaPrevista(new SimpleDateFormat("dd/MM/yyyy HH:mm").parse(this.txtDataEntregaPrevista.getText().trim() + " " + this.txtHoraEntregaPrevista.getText().trim()));
        } catch (ParseException ex) {
            this.agendamento.setDataEntregaPrevista(null);
        }
        try {
            this.agendamento.setDataEntrega(new SimpleDateFormat("dd/MM/yyyy HH:mm").parse(this.txtDataEntrega.getText().trim() + " " + this.txtHoraEntrega.getText().trim()));
        } catch (ParseException ex) {
            this.agendamento.setDataEntrega(null);
        }
        this.agendamento.setNumeroOS((this.txtNumeroOS.getText().trim().length() > 0) ? Integer.parseInt(this.txtNumeroOS.getText().trim()) : null);
        this.agendamento.setCodigoPrisma(this.txtNumeroPrisma.getText().trim());
        this.agendamento.setAgendado(this.cbxAgendado.getModel().isSelected());
        this.agendamento.setEfetivo(this.cbxEfetivo.getModel().isSelected());
        this.agendamento.setRetorno(this.cbxRetorno.getModel().isSelected());
        this.agendamento.setOrcamento(this.cbxOrcamento.getModel().isSelected());
        this.agendamento.setExplicacaoTrabalho(this.cbxExplicacao.getModel().isSelected());
        this.agendamento.setElevador(this.cbxInspecao.getModel().isSelected());
        this.agendamento.setRequisicaoPecas(this.cbxRequisicao.getModel().isSelected());
        this.agendamento.setVeiculoProntoRevisado(this.cbxVeiculoPronto.getModel().isSelected());
        this.agendamento.setConsultor(listaConsultores.get(cmbConsultor.getSelectedIndex()));
    }

    private void habilitaCabecalho(Boolean valor) {
        this.habilitarCabecalhoBuscaCliente(valor);
        this.habilitarCabecalhoBuscaVeiculo(valor);
    }

    private void habilita(Boolean valor) {
        habilitarCabecalhoBuscaCliente(valor);
        habilitarCabecalhoBuscaVeiculo(valor);
        this.txtMotivoVisita.setEnabled(valor);
        this.txtDataAgendada.setEnabled(valor);
        this.txtHoraAgendada.setEnabled(valor);
        this.txtDataRecepcao.setEnabled(valor);
        this.txtHoraRecepcao.setEnabled(valor);
        this.txtDataEntregaPrevista.setEnabled(valor);
        this.txtHoraEntregaPrevista.setEnabled(valor);
        this.txtDataEntrega.setEnabled(valor);
        this.txtHoraEntrega.setEnabled(valor);
        this.txtNumeroPrisma.setEnabled(valor);
        this.txtNumeroOS.setEnabled(valor);
        this.cbxAgendado.setEnabled(valor);
        this.cbxEfetivo.setEnabled(valor);
        this.cbxRetorno.setEnabled(valor);
        this.cbxOrcamento.setEnabled(valor);
        this.cbxExplicacao.setEnabled(valor);
        this.cbxInspecao.setEnabled(valor);
        this.cbxRequisicao.setEnabled(valor);
        this.cbxVeiculoPronto.setEnabled(valor);
        this.btnSalvarAgendamento.setEnabled(valor);
    }

    private boolean validaFormulario() {
        Boolean retorno = true;

        if (!(this.agendamento.getCliente() instanceof Cliente)) {
            retorno = false;
        }

        if (!(this.agendamento.getVeiculo() instanceof Carro)) {
            retorno = false;
        }

        if (!((DataTextField) this.txtDataAgendada).runValidation()) {
            retorno = false;
        }

        if (!((HoraTextField) this.txtHoraAgendada).runValidation()) {
            retorno = false;
        }

        return retorno;
    }

    private void habilitarCabecalhoBuscaCliente(Boolean valor) {
        this.txtCPF.setEnabled(valor);
        this.btnBuscaCliente.setEnabled(valor);
    }

    private void habilitarCabecalhoBuscaVeiculo(Boolean valor) {
        this.txtTelefone.setEnabled(valor);
        this.txtPlacaVeiculo.setEnabled(valor);
        this.btnCadastrarVeiculo.setEnabled(valor);
        this.btnBuscarVeiculo.setEnabled(valor);
    }

    private void novoAgendamento() {
        this.agendamento = new Agendamento();
        this.habilita(false);
        this.habilitarCabecalhoBuscaCliente(true);
        this.popularCampos();
        this.txtCPF.requestFocus();
    }
}
